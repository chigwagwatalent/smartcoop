# === App ===
spring.application.name=chicken-system
server.port=8080

# === DataSource (MySQL 8) ===
# Recommended: use a dedicated DB user (create first)
#   CREATE USER 'chicken_user'@'localhost' IDENTIFIED BY 'REPLACE_ME';
#   GRANT ALL PRIVILEGES ON coop_db.* TO 'chicken_user'@'localhost';
spring.datasource.url=jdbc:mysql://localhost:3306/coop_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Africa/Harare&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=cHigwagwa1t

# If you insist on root (note: may fail if root uses 'auth_socket'):
# spring.datasource.username=root
# spring.datasource.password=cHigwagwa1t

# Optional (Boot can auto-detect):
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# === Hibernate / JPA ===
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.open-in-view=false

# Helpful in dev; reduce for prod
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Small perf boosts (safe defaults)
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_size=25

# === HikariCP (connection pool) ===
spring.datasource.hikari.pool-name=ChickenHikariCP
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
# Optional: flag connections stuck too long (ms)
# spring.datasource.hikari.leak-detection-threshold=20000

# === Logging ===
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# === JSON / Timezone ===
spring.jackson.time-zone=Africa/Harare

# === (Optional) Flyway migrations instead of ddl-auto ===
# spring.flyway.enabled=true
# spring.jpa.hibernate.ddl-auto=validate
